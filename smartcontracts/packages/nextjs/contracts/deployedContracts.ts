/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    InventoryManagement: {
      address: "0x88b37B25199614454655E09B9Ab70E700D27841C",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_userManagerAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "_paymentTokenAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "_loyaltyRewardsAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "_transactionManagerAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_productCode",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "_tags",
              type: "string[]",
            },
            {
              internalType: "uint256",
              name: "_price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_stock",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_score",
              type: "uint256",
            },
          ],
          name: "addProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_retailerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
          ],
          name: "buyProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_retailerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getProductOfRetailer",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "code",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string[]",
                  name: "tags",
                  type: "string[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
              ],
              internalType: "struct Product",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_retailerAddress",
              type: "address",
            },
          ],
          name: "getProducts",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "code",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string[]",
                  name: "tags",
                  type: "string[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
              ],
              internalType: "struct Product[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "paymentToken",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "productStock",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_retailerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "removeProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "retailerProducts",
          outputs: [
            {
              internalType: "uint256",
              name: "code",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_stock",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_score",
              type: "uint256",
            },
          ],
          name: "updateProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    LoyaltyRewards: {
      address: "0x1eE4c57DCaa69406efDf4EdC9dB483BEF3c3d185",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_authorizedContract",
              type: "address",
            },
            {
              internalType: "address",
              name: "_paymentTokenAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
          ],
          name: "AddScore",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "ContributeToPoll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "redeemTokens",
              type: "uint256",
            },
          ],
          name: "RedeemScore",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
          ],
          name: "TransferScore",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
          ],
          name: "addScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "contributeToPoll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paymentToken",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
          ],
          name: "redeemScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "redemptionPool",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "scorePool",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "scores",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "score",
              type: "uint256",
            },
          ],
          name: "transferScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    Tether: {
      address: "0xCf4CB7Fc3d1265E7c85Fd67D6Bfa52516EbD33C5",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        allowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        approve:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        decimals:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        decreaseAllowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        increaseAllowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        name: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        totalSupply:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        transfer:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        DOMAIN_SEPARATOR:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        eip712Domain:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        nonces:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
        permit:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
      },
    },
    TransactionManager: {
      address: "0x008F162E0cecC425B79fAEf9E9F17BD0a71acD69",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_userManagerAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_retailerAddress",
              type: "address",
            },
          ],
          name: "getRetailerTransactions",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "walletId",
                      type: "string",
                    },
                  ],
                  internalType: "struct User",
                  name: "buyer",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "companyName",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "cnpj",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "walletId",
                      type: "string",
                    },
                  ],
                  internalType: "struct Retailer",
                  name: "retailer",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "code",
                      type: "uint256",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string[]",
                      name: "tags",
                      type: "string[]",
                    },
                    {
                      internalType: "uint256",
                      name: "price",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "score",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Product",
                  name: "product",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct TransactionManager.Transaction[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getTransaction",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "walletId",
                      type: "string",
                    },
                  ],
                  internalType: "struct User",
                  name: "buyer",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "companyName",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "cnpj",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "walletId",
                      type: "string",
                    },
                  ],
                  internalType: "struct Retailer",
                  name: "retailer",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "code",
                      type: "uint256",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string[]",
                      name: "tags",
                      type: "string[]",
                    },
                    {
                      internalType: "uint256",
                      name: "price",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "score",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Product",
                  name: "product",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct TransactionManager.Transaction",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getUserTransactions",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "walletId",
                      type: "string",
                    },
                  ],
                  internalType: "struct User",
                  name: "buyer",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "companyName",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "cnpj",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "walletId",
                      type: "string",
                    },
                  ],
                  internalType: "struct Retailer",
                  name: "retailer",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "code",
                      type: "uint256",
                    },
                    {
                      internalType: "string",
                      name: "ipfsHash",
                      type: "string",
                    },
                    {
                      internalType: "string",
                      name: "name",
                      type: "string",
                    },
                    {
                      internalType: "string[]",
                      name: "tags",
                      type: "string[]",
                    },
                    {
                      internalType: "uint256",
                      name: "price",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "score",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Product",
                  name: "product",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "quantity",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalScore",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct TransactionManager.Transaction[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_buyerAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "_retailerAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_productIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_quantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_totalCost",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_totalScore",
              type: "uint256",
            },
          ],
          name: "recordTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "retailerTransactions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_inventoryManagementAddress",
              type: "address",
            },
          ],
          name: "setInventoryManagement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "transactions",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "walletId",
                  type: "string",
                },
              ],
              internalType: "struct User",
              name: "buyer",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "companyName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cnpj",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "walletId",
                  type: "string",
                },
              ],
              internalType: "struct Retailer",
              name: "retailer",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "code",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string[]",
                  name: "tags",
                  type: "string[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "score",
                  type: "uint256",
                },
              ],
              internalType: "struct Product",
              name: "product",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalPrice",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalScore",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userTransactions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    UserManager: {
      address: "0xE98E049DE74c41796F4edbae4AE9abC39586FCFb",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_companyName",
              type: "string",
            },
            {
              internalType: "string",
              name: "_cnpj",
              type: "string",
            },
            {
              internalType: "string",
              name: "_walletId",
              type: "string",
            },
          ],
          name: "createRetailer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_walletId",
              type: "string",
            },
          ],
          name: "createUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_walletAddress",
              type: "address",
            },
          ],
          name: "getRetailer",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "companyName",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "cnpj",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "walletId",
                  type: "string",
                },
              ],
              internalType: "struct Retailer",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_walletAddress",
              type: "address",
            },
          ],
          name: "getUser",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "walletId",
                  type: "string",
                },
              ],
              internalType: "struct User",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_walletAddress",
              type: "address",
            },
          ],
          name: "isRetailer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_walletAddress",
              type: "address",
            },
          ],
          name: "isUser",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "retailers",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "companyName",
              type: "string",
            },
            {
              internalType: "string",
              name: "cnpj",
              type: "string",
            },
            {
              internalType: "string",
              name: "walletId",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "users",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "walletId",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
