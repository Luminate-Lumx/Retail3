/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  80002: {
    InventoryManagement: {
      address: "0xdC16eE353d8369a716c5350b3b68Af48c97d0771",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "userManagerAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "paymentTokenAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "loyaltyRewardsAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "transactionManagerAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "productCode",
              type: "uint128",
            },
          ],
          name: "ProductAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "productName",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "quantity",
              type: "uint32",
            },
          ],
          name: "ProductBought",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "productCode",
              type: "uint128",
            },
          ],
          name: "ProductRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "productCode",
              type: "uint128",
            },
          ],
          name: "ProductUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint128",
              name: "productCode",
              type: "uint128",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "tags",
              type: "string[]",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "stock",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "addProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "index",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "quantity",
              type: "uint16",
            },
          ],
          name: "buyProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "index",
              type: "uint32",
            },
          ],
          name: "getProduct",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "code",
                  type: "uint128",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string[]",
                  name: "tags",
                  type: "string[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "score",
                  type: "uint32",
                },
                {
                  internalType: "bool",
                  name: "removed",
                  type: "bool",
                },
              ],
              internalType: "struct Product",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
            {
              internalType: "uint128",
              name: "productCode",
              type: "uint128",
            },
          ],
          name: "getProductStock",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
          ],
          name: "getProducts",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "code",
                  type: "uint128",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string[]",
                  name: "tags",
                  type: "string[]",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "score",
                  type: "uint32",
                },
                {
                  internalType: "bool",
                  name: "removed",
                  type: "bool",
                },
              ],
              internalType: "struct Product[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "paymentToken",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint128",
              name: "",
              type: "uint128",
            },
          ],
          name: "productStock",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "index",
              type: "uint32",
            },
          ],
          name: "removeProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "retailerProducts",
          outputs: [
            {
              internalType: "uint128",
              name: "code",
              type: "uint128",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
            {
              internalType: "bool",
              name: "removed",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "index",
              type: "uint32",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "tags",
              type: "string[]",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "stock",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "updateProduct",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    LoyaltyRewards: {
      address: "0xc27cc7153E1788F3d3A91aF0518fcE01872C0810",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_paymentTokenAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "AddScore",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "ContributeToPool",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "redeemTokens",
              type: "uint256",
            },
          ],
          name: "RedeemScore",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "TransferScore",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "addScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "calculateRedeemTokens",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "address",
              name: "vault",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "contributeToPool",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
          ],
          name: "createWalletIfNotExists",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
          ],
          name: "getRedeemPool",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getScore",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
          ],
          name: "getScorePool",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
          ],
          name: "getWalletAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "paymentToken",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "redeemScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "retailerWallets",
          outputs: [
            {
              internalType: "contract RetailerWallet",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "scorePool",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "scores",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_authorizedContract",
              type: "address",
            },
          ],
          name: "setAuthorizedContract",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "score",
              type: "uint32",
            },
          ],
          name: "transferScore",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    Tether: {
      address: "0x2bc91c73AC7d2c1D22F1be0c035BD59148ed328F",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "burner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Burn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TransactionManager: {
      address: "0xa6984A06a7B975b13dcC9c8F94e125eFD62c5052",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "userManagerAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
          ],
          name: "getRetailerTransactions",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "buyer",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "retailer",
                  type: "address",
                },
                {
                  internalType: "uint32",
                  name: "productIndex",
                  type: "uint32",
                },
                {
                  internalType: "uint16",
                  name: "quantity",
                  type: "uint16",
                },
                {
                  internalType: "uint256",
                  name: "totalPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "totalScore",
                  type: "uint32",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct Transaction[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "index",
              type: "uint32",
            },
          ],
          name: "getTransaction",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "buyer",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "retailer",
                  type: "address",
                },
                {
                  internalType: "uint32",
                  name: "productIndex",
                  type: "uint32",
                },
                {
                  internalType: "uint16",
                  name: "quantity",
                  type: "uint16",
                },
                {
                  internalType: "uint256",
                  name: "totalPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "totalScore",
                  type: "uint32",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct Transaction",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "getUserTransactions",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "buyer",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "retailer",
                  type: "address",
                },
                {
                  internalType: "uint32",
                  name: "productIndex",
                  type: "uint32",
                },
                {
                  internalType: "uint16",
                  name: "quantity",
                  type: "uint16",
                },
                {
                  internalType: "uint256",
                  name: "totalPrice",
                  type: "uint256",
                },
                {
                  internalType: "uint32",
                  name: "totalScore",
                  type: "uint32",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct Transaction[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "inventoryManagement",
          outputs: [
            {
              internalType: "contract InventoryManagement",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyerAddress",
              type: "address",
            },
            {
              internalType: "address",
              name: "retailerAddress",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "productIndex",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "quantity",
              type: "uint16",
            },
            {
              internalType: "uint256",
              name: "totalCost",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "totalScore",
              type: "uint32",
            },
          ],
          name: "recordTransaction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "retailerTransactions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "inventoryManagementAddress",
              type: "address",
            },
          ],
          name: "setInventoryManagement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "transactions",
          outputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              internalType: "address",
              name: "retailer",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "productIndex",
              type: "uint32",
            },
            {
              internalType: "uint16",
              name: "quantity",
              type: "uint16",
            },
            {
              internalType: "uint256",
              name: "totalPrice",
              type: "uint256",
            },
            {
              internalType: "uint32",
              name: "totalScore",
              type: "uint32",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "userManager",
          outputs: [
            {
              internalType: "contract UserManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userTransactions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    UserManager: {
      address: "0xC07b17696877180055bc2fD688265b65A3982092",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "paymentTokenAddress",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "entityAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum EntityType",
              name: "entityType",
              type: "uint8",
            },
          ],
          name: "EntityCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "entityAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "string",
              name: "property",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newValue",
              type: "string",
            },
          ],
          name: "EntityUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "walletId",
              type: "string",
            },
            {
              internalType: "string",
              name: "additionalInfo",
              type: "string",
            },
          ],
          name: "createRetailer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "walletId",
              type: "string",
            },
          ],
          name: "createUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "emailToWallet",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "entities",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
            {
              internalType: "enum EntityType",
              name: "entityType",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "walletId",
              type: "string",
            },
            {
              internalType: "string",
              name: "additionalInfo",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "entitiesList",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getEntitiesList",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
          ],
          name: "getEntity",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "email",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "ipfsHash",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "wallet",
                  type: "address",
                },
                {
                  internalType: "enum EntityType",
                  name: "entityType",
                  type: "uint8",
                },
                {
                  internalType: "string",
                  name: "walletId",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "additionalInfo",
                  type: "string",
                },
              ],
              internalType: "struct Entity",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
          ],
          name: "getWalletByEmail",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
          ],
          name: "isRetailer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "walletAddress",
              type: "address",
            },
          ],
          name: "isUser",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "paymentToken",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
            {
              internalType: "enum EntityType",
              name: "entityType",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "walletId",
              type: "string",
            },
            {
              internalType: "string",
              name: "additionalInfo",
              type: "string",
            },
          ],
          name: "registerEntity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "property",
              type: "string",
            },
            {
              internalType: "string",
              name: "newValue",
              type: "string",
            },
          ],
          name: "updateEntity",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
